stages:
  - build
  - deliver
  - deploy
  
build-frontend:
  image: node:12
  stage: build
  before_script:
    - cd frontend
    - npm i
  script:
    - npm run build:dev
  artifacts:
    paths:
      - frontend/dist/**
    when: always
    expire_in: 2 hours

build-backend: 
  image: maven:latest
  stage: build
  include:
    - artifact: artifacts.zip
    - job: build-frontend
  before_script:
    #- cp frontend/dist/index.html backend/src/main/resources/static/
    - ls 
    - cd backend
  script:
    - mvn clean install -DskipTests
  artifacts:
    paths: 
      - backend/target/**
    when: always
    expire_in: 2 hours
      
deliver-frontend:
  image: gitlab/dind
  stage: deliver
  before_script:
    - cd frontend
  script:
    - docker build -t swtp.pcvolkmer.de/infosys .
    - docker login -u $REPO_USERNAME -p $REPO_PASSWORD swtp.pcvolkmer.de
    - docker push swtp.pcvolkmer.de/infosys

deliver-backend:
  image: gitlab/dind
  stage: deliver
  before_script:
    - cd backend
  script:
    - docker build -t swtp.pcvolkmer.de/infosys-backend .
    - docker login -u $REPO_USERNAME -p $REPO_PASSWORD swtp.pcvolkmer.de
    - docker push swtp.pcvolkmer.de/infosys-backend
  
deploy-frontend:
  stage:
    deploy
  only:
    - develop
  script:
    - wget --post-data '' $DEPLOY_WEBHOOK_FRONTEND

deploy-backend:
  stage:
    deploy
  only:
    - develop
  script:
    - wget --post-data '' $DEPLOY_WEBHOOK_BACKEND
